@import url(default.css);
@import url(fonts.css); /* <이게 폰트 불러옴 */

#wrap{ /* (#은 id를 지칭) 홈페이지 전체를 감싸는 요소,홈페이지 슬라이드시 백그라운드 짤리는거 방지 */
    min-width: 1260px;
}

.wrapper { /* 홈페이지 넓이를 제한하고 넓이 가운데정렬 */
    width: 1260px;
    margin: 0 auto; /* 가운데정렬 이유는 아직 몲 */
}
/* 글자의 스타일은 상속받음. 기본 글자의 스타일은 모든 태그를 감싸는 html,body에 선언함. */
html, body {
    /* font-family에서 사용하는 서체명은 font-face에서 사용한 이름으로 사용,sans-serif = 고딕체라는 의미 */
    font-family: "Pretendard", sans-serif;
	/* font-family: "Noto Serif KR", serif; */
    font-size: 15px; /* 글자크기 */
    font-weight: 500; /* 얘는 px 안들어감 */
    color: #2d2d2d; /* 글자색상*/
    line-height: 1.2; /* 행간 [글자크기의 배수] */
    letter-spacing: 0em; /* 자간 */
    word-break: keep-all; /* 단어별 줄바꿈 */
}

/* ---------------------------------여기까지 기본 ---------------------------- 아래부터 삭제하고 ㄱ*/
header {
    height: 100px;
}
header .wrapper {
    display: flex;
    justify-content: space-between;
}
header .logo {
	margin: 22px 0 0 0;
}
header .gnb ul {
    display: flex;   
}
/* 1차메뉴는 큼직하게 눌려야 함. 그래서 a에 속성을 줌[여백,사이즈] */
header .gnb ul li a {
    font-size: 20px;
    color: #1d1d1d;
    display: block; /* inline요소인 a를 block으로 변경하게 해줌 */
    padding: 39px 25px 37px 25px; /* (좌우)사이여백의 반값을 줌 */
}
header .gnb ul li a:hover { /* a:hover a에게 마우스를 올렸을때 */
    font-weight: 600;
    color: #FFB703;
    text-decoration: overline;
}

.visual {
	height: 720px;
	background-image: url(../images/visual_bg_test.png);
	background-position: center center;
	background-repeat: no-repeat;
	background-size: cover;
	/* background를 한번에 선언하는 방법 (1.url (이미지 경로) 2.no-repeat (반복) 3.center center (위치) / cover (이미지 채움) */
	background: url(../images/visual_bg.png) no-repeat center center / cover;
	color: #fff;
}
.visual strong {
	padding: 175px 0 0 0;
	display: block; /* 인라인요소는 여백 적용x block으로 바꿈 */
	font-weight: 600;
}
.visual .point {
	color: #8ECAE6;
}
.visual .point2 {
	color: #FFB703;
}
.visual h2 {
	font-size: 40px;
	font-weight: 600;
}

.introduce .art {
	display: flex;
	justify-content: center;
	margin: 143px 0 0 0;
}
.introduce .art .text { /* width너비를 이미지 끝에 맞춰야 딱 맞게 들어감 */
	margin-left: 107px;
	width: 535px;
}
.introduce .foundation {
	display: flex;
	justify-content: center;
	margin: 98px 0 0 0;
	text-align: right;
}
.introduce h2 {
	font-size: 40px;
	font-weight: 800;
}
.introduce strong {
	font-size: 26px;
	font-weight: 800;
	margin: 29px 0 29px 0;
	display: block;
}
.introduce .text h2 {
	margin: 76px 0 0 0;
}
.introduce .btn {
	display: flex;
	margin: 41px 0 0 0;
	/* a태그는 원래 좌우로 배치됨 but 사이사이 여백이 발생함 이 여백을 없애기 위해 flex로 배치 */
}
.introduce .btn a {
	border: 1px solid #666666;
	padding: 9px 15px;
	display: block; /* 위에서 flex를 주었기 때문에 inline-block이 아니라 block 사용가능 */
	margin: 0 11px 0 0;
}
.introduce .btn a:hover { /* hover전에 boder가 있었다면 hover후에도 border를 주는것이 사이즈가 유지 됨 */
	background-color: #FFB703;
	color: #fff;
	border: 1px solid #FFB703;
}
.introduce .btn a:last-child { /* btn클래스 안에 있는 a중에서 마지막 a */
	margin-right: 0;
}
.introduce .foundation .btn { /* flex로 배치한 버튼을 오른쪽으로 정렬 / text align의 영향을 받지 않음. */
	justify-content: flex-end;
}
.introduce .foundation .text { /* width너비를 이미지 끝에 맞춰야 딱 맞게 들어감 */
	margin-right: 107px;
	width: 535px;
}

.promotion { /* 배경보다 promotion 콘텐츠 길이가 더 길다. 배경의 위치를 정확하게 가운데 상단 [center top] / background-size 주면 안됨...
					디자인한 사이즈대로 들어가야 하기 때문에..*/
	background:url(../images/promotion_bg2.png) no-repeat center top;
	margin: 85px 0 0 0;
}
.promotion .news {
	color: #fff;
	padding: 116px 0 70px 0;
}
.promotion .news .wrapper {
	display: flex;
	justify-content: space-between;
}
.promotion .notic h2 {
	font-size: 40px;
	font-weight: 800;
	margin:37px 0 13px 0;
}
.promotion .notic .point {
	color: #FFB703;
}
.promotion .news .list {
	width: 619px;
}
.promotion .news .list ul li {
	border-bottom: 1px solid rgba(33,158,188,0.6);
}
.promotion .news .list ul li span {
	color: rgba(255,255,255,0.8);
}
.promotion .news .list ul li a {
	display: flex; /* display:flex는 해당 요소를 block요소로 만들어 넓이를 100%로 만듬 */
	justify-content: space-between;
	align-items: center; /* 위아래 가운데 맞추기 */
	padding: 37px 0 11px 0; /* margine으로 여백을 주면 a의 클릭영역이 사라짐 padding으로 주면 여백만큼 클릭영역 확보가능 */ 
}
.promotion .news .list ul li:hover {
	border-color: #FFB703;
	color: #FFB703;
}
.promotion .news .list ul li:hover span {
	color: #FFB703;
}
.promotion .news .wrapper {
	position: relative;
	/* more 정렬의 기준
	   more를 감싸는 wrapper를 기준으로 정렬
	   wrapper에 position값을 줘야함.
	   position 속성값 중 유일하게 relative 값만이 요소에 아무런 영향을 끼치지 않음. */
}
.promotion .news .more {
	border: 1px solid rgba(255,255,255,0.6);
	color: rgba(255,255,255,0.6);
	padding: 9px 15px;
	display: inline-block; /* inline요소는 padding,margine 안먹음 */
	position: absolute;
	left: 0;
	top:133px;
	/* position:absolute는 반드시 좌우위치 left right
								 위아래 위치 top bottom 값을 반드시 넣어야하고
								 이 값을 어디서 부터 계산하는지 기준이 필요함 
								 !!나를 감싸는 요소!!중에서 posittion 속성(relative)을 
								 포함한 요소를 기준으로 정렬*/
	/* .wrapper를 기준으로 정렬 */
}
.promotion .news .more:hover {
	border: 1px solid rgba(255,255,255,1.0);
	color: #012D43;
	background-color: #fff;
}
.promotion .movie .notic h2 {
	margin: 0 0 41px 0;
	color: #fff;
}
.promotion .movie .notic .list ul {
	display: flex;
	justify-content: space-between;
}
.promotion .movie .notic .list ul li a {
	display: block; /* a도 블록요소로 만들어 a와 li의 영역 크기를 동일하게 줌 */
}
.promotion .movie .notic .list ul li a .photo img {
	border-radius: 30px; /* 이미지에 border 태그를 통해 테두리를 주면 이미지 밖으로 border가 생성됨
							이미지는 감싸는 영역의 크기를 이미지보다 작게해도 이미지가 자동으로 줄어들지 않음.
							본인의 사이즈대로 나타남. 글자는 줄바꿈을 함. */
	width: 100%; /* 나를 감싸는 photo의 넓이 100% - border는 별도
					넓이 100%에서 테두리값을 뺀 넓이를 주면 됨.. */
				 /* width: calc (100% - border px); */
}
.promotion .movie .notic .list ul li a h3 {
	font-weight: 700;
	margin: 17px 0 0 0;
}
/* 마우스를 오버 했을때 스타일이 변경되는 요소 선택자를 그대로 복사해서 와야함 */
.promotion .movie .notic .list ul li a:hover h3 {
	color: #023047;
	font-weight: 900;
}
.promotion .movie .notic .list ul li a:hover .photo img {
	border: 2px solid #FFB703;
	width: calc(100% - 2px);
}

footer { /* footer는 footer 자체에서 여백처리 하는게 좋음 */
	margin: 124px 0 0 0;
	padding: 83px 0 78px 0;
	color: rgba(255,255,255,0.8);
	background-color: #1C1C1C;
}
footer .f_nav ul {
	display: flex;
}
footer .f_nav ul li {
	margin: 0 38px 0 0;
}
footer .f_nav ul li.privacy {
	font-weight: 800;
}
footer .f_info {
	margin: 24px 0 28px 0;
}
/*  footer .f_info adress, span
	이렇게 선택자를 쓰면 footer안에 f_info라는 클래스명을 갖은 요소 안에있는 
	address와 이 html내부의 모든 span가 되어버림 */
footer .f_info address, /* 이렇게 다 써야함 */
footer .f_info span {
	margin: 0 35px 5px 0;
	display: inline-block; /* address는 원래 block태그라서 span태그와 좌우 배치되려고
							  span은 margin을 적용시키려고.. */
}
footer .copy {
	color: rgba(255,255,255,0.6);
}
footer .wrapper {
	/* footer .family 정렬의 기준 */
	position: relative;
}
footer .family {
	position: absolute;
	right: 0;
	top: -15px;
	/* footer .wrapper 기준으로 정렬 */
}
footer .family button {
	border: 1px solid rgba(255,255,255,0.8);
	width: 190px;
	height: 35px;
	/* 원래 버튼 태그는 좌우,위아래 가운데 정렬 */
	display: flex;
	justify-content: space-between;
	/* 내부 두 요소를 좌우 끝단에 배치 */
	align-items: center; /* 위아래 가운데 */
	padding: 0 20px;
}